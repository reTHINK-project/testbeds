!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("activate",[],t):"object"==typeof exports?exports.activate=t():e.activate=t()}("undefined"!=typeof self?self:this,function(){return function(e){var t={};function o(r){if(t[r])return t[r].exports;var n=t[r]={i:r,l:!1,exports:{}};return e[r].call(n.exports,n,n.exports,o),n.l=!0,n.exports}return o.m=e,o.c=t,o.d=function(e,t,r){o.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:r})},o.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return o.d(t,"a",t),t},o.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},o.p="",o(o.s=0)}([function(e,t,o){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=function(){function e(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,o,r){return o&&e(t.prototype,o),r&&e(t,r),t}}();t.default=function(e,t,o,r){return{name:"GoogleProtoStub",instance:new n(e,t,o,r)}};var n=function(){function e(t,o,r,n){if(function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),!t)throw new Error("The runtimeProtoStubURL is a needed parameter");if(!o)throw new Error("The bus is a needed parameter");if(!r)throw new Error("The config is a needed parameter");if(!r.runtimeURL)throw new Error("The config.runtimeURL is a needed parameter");var i=this;console.log("[GoogleProtoStub] Google PROTOSTUB",i),this._id=0,this._runtimeProtoStubURL=t,this._bus=o,this._config=r,this._domain=r.domain,this._runtimeSessionURL=r.runtimeURL,this._syncher=n.createSyncher(t,o,r),this._userActivityVertxHypertyURL="hyperty://sharing-cities-dsm/user-activity",i._sendStatus("created"),i.started=!1;o.addListener("*",function(e){if(console.log("[GoogleProtoStub] new Message  : ",e),e.identity&&(i._identity=e.identity),"delete"!==e.type){if(e.hasOwnProperty("body")&&e.body.hasOwnProperty("identity")){if(e.body.identity.accessToken){i._accessToken=e.body.identity.accessToken;var t={id:e.id,type:"response",from:e.to,to:e.from,body:{code:200,runtimeURL:i._runtimeSessionURL}};console.log(i),i._bus.postMessage(t)}i.hypertyJSUrl=e.from}var o="hyperty-catalogue://catalogue."+i._domain+"/.well-known/dataschema/Context",r={id:"1276020076",values:[{type:"user_walking_context",name:"walking distance in meters",unit:"meter",value:0,startTime:"2018-03-25T12:00:00Z",endTime:"2018-03-25T12:10:00Z"},{type:"user_biking_context",name:"biking distance in meters",unit:"meter",value:0,startTime:"2018-03-26T12:00:00Z",endTime:"2018-03-26T12:10:00Z"}]};i._accessToken&&!i.started&&"create"===e.type&&i._resumeReporters("user_activity",e.to).then(function(t){console.log("GoogleProtoStub]._resumeReporters (result)  ",t),0==t?i._setUpReporter(i._identity,o,r,["context"],"user_activity",e.to).then(function(e){e&&i.startWorking(e)}):i.startWorking(t)}).catch(function(e){})}else i.stopWorking()})}return r(e,[{key:"startWorking",value:function(e){var t=this;t.reporter=e,t.hasStartedQuerying=!1,e.onSubscription(function(o){o.accept(),console.log("[GoogleProtoStub] new subs",o),t.hasStartedQuerying||(t.hasStartedQuerying=!0,function(){var o=e.metadata.created,r=e.metadata.lastModified;r||(r=o),t.querySessions(o,r),t.startInterval=setInterval(function(){(r=e.metadata.lastModified)||(r=o),t.querySessions(o,r)},t.config.sessions_query_interval),t.started=!0}())}),console.log("[GoogleProtoStub] User activity DO created: ",e),e.inviteObservers([t._userActivityVertxHypertyURL])}},{key:"stopWorking",value:function(){clearInterval(this.startInterval),this.started=!1}},{key:"_setUpReporter",value:function(e,t,o,r,n,i){var s=this;return new Promise(function(a,u){var c={resources:r,expires:3600,reporter:i,domain_registration:!1,domain_routing:!1};s._syncher.create(t,[],o,!0,!1,n,e,c).then(function(e){console.log("[GoogleProtoStub] REPORTER RETURNED",e),a(e)}).catch(function(e){console.error("[GoogleProtoStub] err",e),a(null)})})}},{key:"_resumeReporters",value:function(e,t){var o=this;return new Promise(function(r,n){o._syncher.resumeReporters({store:!0,reporter:t}).then(function(o){console.log("[GoogleProtoStub] Reporters resumed",o);var n=Object.keys(o);if(!(n.length>0))return r(!1);n.forEach(function(n){return console.log("[GoogleProtoStub] ",n),console.log("[GoogleProtoStub] ",o[n]),t==o[n].metadata.reporter&&o[n].metadata.name==e?r(o[n]):r(!1)})}).catch(function(e){console.info("[GoogleProtoStub] Reporters:",e)})})}},{key:"querySessions",value:function(e,t){var o=this;e!==t&&(e=t);var r=new Date,n=r.toISOString(),i=r.getTime(),s=new Date(e).getTime();(new XMLHttpRequest).withCredentials=!0,o.getDistanceForActivities(s,i).then(function(e){for(var t=0;t<e.length;t+=1){var r=e[t],i=r.activity,a=r.dataset[0].point[0].value[0].fpVal,u=new Date(s).toISOString();switch(i){case 7:case 8:console.log("[GoogleProtoStub] walking/running distance (m): ",a),o.reporter.data.values=[{type:"user_walking_context",name:"walking distance in meters",unit:"meter",value:a,startTime:u,endTime:n}];break;case 1:console.log("[GoogleProtoStub] biking distance (m): ",a),o.reporter.data.values=[{type:"user_biking_context",name:"biking distance in meters",unit:"meter",value:a,startTime:u,endTime:n}]}}},function(r){if(r.hasOwnProperty("errorCode")&&401===r.errorCode)return o.refreshAccessToken(e,t);throw r}).catch(function(e){o._sendStatus("disconnected",e),console.error("[GoogleProtoStub.querySessions] error: ",e)})}},{key:"getDistanceForActivities",value:function(e,t){var o=this;return new Promise(function(r,n){var i={aggregateBy:[{dataTypeName:"com.google.distance.delta"}],bucketByActivityType:{minDurationMillis:0},startTimeMillis:e,endTimeMillis:t},s=new XMLHttpRequest;s.withCredentials=!0,s.addEventListener("readystatechange",function(){if(4===this.readyState){var e=JSON.parse(this.responseText);console.log("[GoogleProtoStub.getDistanceForActivities] response: ",e),e.hasOwnProperty("bucket")?r(e.bucket):e.hasOwnProperty("code")&&e.code>299?n({errorCode:e.code}):n(e)}}),s.open("POST","https://www.googleapis.com/fitness/v1/users/me/dataset:aggregate"),s.setRequestHeader("Content-Type","application/json"),s.setRequestHeader("Authorization","Bearer "+o._accessToken),s.setRequestHeader("Cache-Control","no-cache"),s.send(JSON.stringify(i))})}},{key:"refreshAccessToken",value:function(e,t){var o=this;return new Promise(function(r,n){var i={type:"execute",from:o._runtimeProtoStubURL,to:o._runtimeSessionURL+"/idm",body:{method:"refreshAccessToken",params:{resources:["user_activity_context"],domain:"google.com"}}};o._bus.postMessage(i,function(i){console.log("[GoogleProtoStub.refreshAccessToken] reply ",i),i.body.hasOwnProperty("value")?(o._accessToken=i.body.value,o.querySessions(e,t),r()):n(i.body)})})}},{key:"_sendStatus",value:function(e,t){console.log("[GoogleProtoStub status changed] to ",e),this._state=e;var o={type:"update",from:this._runtimeProtoStubURL,to:this._runtimeProtoStubURL+"/status",body:{value:e}};t&&(o.body.desc=t),this._bus.postMessage(o)}},{key:"config",get:function(){return this._config}},{key:"runtimeSession",get:function(){return this._runtimeSessionURL}}]),e}()}]).default});